// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @unique @default(uuid())
  tenantId  String
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  isAdmin   Boolean  @default(false)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  org Org @relation(fields: [tenantId], references: [id])

  @@id([id, tenantId])
  @@map("users")
}

model Org {
  id          String @id @default(uuid())
  companyName String @unique

  stripeCustomerId       String?   @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  updatedAt              DateTime  @updatedAt
  createdAt              DateTime  @default(now())

  invites Invite[]
  users   User[]
  agents  Agent[]
  calls   Call[]
  leads   Lead[]

  @@map("orgs")
}

model Invite {
  id        String   @default(uuid())
  tenantId  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())

  org Org @relation(fields: [tenantId], references: [id])

  @@id([id, tenantId])
  @@map("invites")
}

model Agent {
  id         String  @unique
  tenantId   String
  isArchived Boolean @default(false)

  org Org @relation(fields: [tenantId], references: [id])

  @@id([id, tenantId])
  @@map("agents")
}

model Call {
  id       String @unique
  tenantId String

  org Org @relation(fields: [tenantId], references: [id])

  @@id([id, tenantId])
  @@map("calls")
}

model Lead {
  id       String @unique @default(uuid())
  tenantId String

  org Org @relation(fields: [tenantId], references: [id])

  @@id([id, tenantId])
  @@map("leads")
}
